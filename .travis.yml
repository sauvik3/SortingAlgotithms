dist: trusty
language: cpp

cache: # see https://docs.travis-ci.com/user/caching/
- directories:
  - $HOME/.cache

notifications:
  email: false

env:
  global:
  jobs:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0

compiler: gcc
os: linux

jobs:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:

    # GCC 6
    - env: COMPILER=g++-6 BUILD_TYPE=Debug CODE_COVERAGE=ON
      compiler: gcc
      addons: &gcc6
        apt:
          packages: ["g++-6", "g++-6-multilib", "libc6-dbg", "libc6-dbg:i386", "lcov", "astyle", "valgrind"]
          sources: *apt_sources

    # GCC 6
    - env: COMPILER=g++-6 BUILD_TYPE=Release
      compiler: gcc
      addons: &gcc6
        apt:
          packages: ["g++-6", "g++-6-multilib", "libc6-dbg", "libc6-dbg:i386", "lcov", "astyle", "valgrind"]
          sources: *apt_sources

    # GCC 6
    - env: COMPILER=g++-6 BUILD_TYPE=Debug
      compiler: gcc
      addons: &gcc6
        apt:
          packages: ["g++-6", "g++-6-multilib", "libc6-dbg", "libc6-dbg:i386", "lcov", "astyle", "valgrind"]
          sources: *apt_sources

before_install:
  - mkdir -p build && cd build

script:
  - cmake -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCODE_COVERAGE=${CODE_COVERAGE} -DCMAKE_C_FLAGS="${EXTRA_FLAGS}" -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS} ${EXTRA_CXX_FLAGS}" ${EXTRA_OPTIONS} ..
  - cmake --build . --config ${BUILD_TYPE} -- -j $(nproc)
  - valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --trace-children=yes ./Main/Main

after_success:
  - ctest -j $(nproc) --output-on-failure
  - if [ -n "${CODE_COVERAGE}" ]; then lcov --directory . --capture --output-file coverage.info; fi
  - if [ -n "${CODE_COVERAGE}" ]; then lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info; fi
  - if [ -n "${CODE_COVERAGE}" ]; then lcov --list coverage.info; fi
  - if [ -n "${CODE_COVERAGE}" ]; then bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"; fi
